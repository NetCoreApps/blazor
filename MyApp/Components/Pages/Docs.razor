@page "/docs/{path?}"
@inherits AppComponentBase

@using Markdig
@using Markdig.Syntax

<link href="css/typography.css" rel="stylesheet" />
<link href="css/markdown.css" rel="stylesheet" />

@if (render.Response?.Preview != null)
{
    <div class="prose dark:prose-invert lg:prose-xl min-vh-100 m-3" data-md=@Path>
        <div class="markdown-body">
            @((MarkupString)render.Response!.Preview)
        </div>
    </div>
}
else if (render.Error == null)
{
    <Loading />
}

<ErrorSummary Status=@render.Error />

@code {
    [Parameter]
    public string? Path { get; set; }

    ApiResult<MarkdownFileInfo> render { get; set; } = new();

    async Task loadDoc() => 
        render = await MarkdownUtils.LoadDocumentAsync(Path!, doc => 
            HostContext.VirtualFileSources.GetFile($"/content/{doc.FileName}").ReadAllTextAsync());

    protected override async Task OnInitializedAsync() => await loadDoc();
}
